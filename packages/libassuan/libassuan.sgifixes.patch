diff -u -r libassuan-2.5.3-orig/src/assuan-defs.h libassuan-2.5.3/src/assuan-defs.h
--- libassuan-2.5.3-orig/src/assuan-defs.h	2018-07-02 16:46:50.000000000 +0000
+++ libassuan-2.5.3/src/assuan-defs.h	2020-08-18 09:09:59.799925560 +0000
@@ -55,6 +55,9 @@
 
 #define LINELENGTH ASSUAN_LINELENGTH
 
+#if defined(__sgi)
+#define SCM_RIGHTS 0x01
+#endif
 
 struct cmdtbl_s
 {
diff -u -r libassuan-2.5.3-orig/src/assuan-logging.c libassuan-2.5.3/src/assuan-logging.c
--- libassuan-2.5.3-orig/src/assuan-logging.c	2017-11-15 15:35:09.000000000 +0000
+++ libassuan-2.5.3/src/assuan-logging.c	2020-08-18 09:09:59.801635240 +0000
@@ -143,7 +143,11 @@
 
   prf = assuan_get_assuan_log_prefix ();
   if (*prf)
+#if defined(__sgi)
+    fprintf (fp, "%s[%ld]: ", prf, getpid ());
+#else
     fprintf (fp, "%s[%u]: ", prf, (unsigned int)getpid ());
+#endif
 
   fprintf (fp, "%s", msg);
   /* If the log stream is a file, the output would be buffered.  This
diff -u -r libassuan-2.5.3-orig/src/assuan-pipe-connect.c libassuan-2.5.3/src/assuan-pipe-connect.c
--- libassuan-2.5.3-orig/src/assuan-pipe-connect.c	2017-11-15 15:35:41.000000000 +0000
+++ libassuan-2.5.3/src/assuan-pipe-connect.c	2020-08-18 09:09:59.803415560 +0000
@@ -139,7 +139,11 @@
        assuan server is able to read the actual pid of the client.
        The server can't use getppid because it might have been double
        forked before the assuan server has been initialized. */
+#if defined(__sgi)
+    sprintf (mypidstr, "%ld", atp->parent_pid);
+#else
     sprintf (mypidstr, "%lu", (unsigned long) atp->parent_pid);
+#endif
     setenv ("_assuan_pipe_connect_pid", mypidstr, 1);
 
     /* Make sure that we never pass a connection fd variable when
@@ -255,7 +259,11 @@
        assuan server is able to read the actual pid of the client.
        The server can't use getppid because it might have been double
        forked before the assuan server has been initialized. */
+#if defined(__sgi)
+    sprintf (mypidstr, "%ld", atp->parent_pid);
+#else
     sprintf (mypidstr, "%lu", (unsigned long) atp->parent_pid);
+#endif
     setenv ("_assuan_pipe_connect_pid", mypidstr, 1);
 
     /* Now set the environment variable used to convey the
@@ -303,7 +311,11 @@
   if (! ctx->flags.no_fixsignals)
     fix_signals ();
 
+#if defined(__sgi)
+  sprintf (mypidstr, "%ld", getpid ());
+#else
   sprintf (mypidstr, "%lu", (unsigned long)getpid ());
+#endif
 
   if (fd_child_list)
     while (fd_child_list[child_fds_cnt] != ASSUAN_INVALID_FD)
diff -u -r libassuan-2.5.3-orig/src/assuan-uds.c libassuan-2.5.3/src/assuan-uds.c
--- libassuan-2.5.3-orig/src/assuan-uds.c	2017-11-15 15:36:55.000000000 +0000
+++ libassuan-2.5.3/src/assuan-uds.c	2020-08-18 09:10:04.130449960 +0000
@@ -59,20 +59,33 @@
    on Mac OS X, so be extra careful to define _DARWIN_C_SOURCE to get
    those definitions instead of using these.  */
 #define MY_ALIGN(n) ((((n))+ sizeof(size_t)-1) & (size_t)~(sizeof(size_t)-1))
+
 #ifndef CMSG_SPACE
 #define CMSG_SPACE(n) (MY_ALIGN(sizeof(struct cmsghdr)) + MY_ALIGN((n)))
 #endif
 #ifndef CMSG_LEN
 #define CMSG_LEN(n) (MY_ALIGN(sizeof(struct cmsghdr)) + (n))
 #endif
+
+#if defined(__sgi)
+
+#undef CMSG_FIRSTHDR
+#define CMSG_FIRSTHDR(mhdr) \
+  ((size_t)(mhdr)->msg_ctrllen >= sizeof (struct cmsghdr)		      \
+   ? (struct cmsghdr*) (mhdr)->msg_ctrl : (struct cmsghdr*)NULL)
+#endif
+
 #ifndef CMSG_FIRSTHDR
+
 #define CMSG_FIRSTHDR(mhdr) \
   ((size_t)(mhdr)->msg_controllen >= sizeof (struct cmsghdr)		      \
    ? (struct cmsghdr*) (mhdr)->msg_control : (struct cmsghdr*)NULL)
+
 #endif
 #ifndef CMSG_DATA
 #define CMSG_DATA(cmsg) ((unsigned char*)((struct cmsghdr*)(cmsg)+1))
 #endif
+
 #endif /*USE_DESCRIPTOR_PASSING*/
 
 
@@ -87,7 +100,11 @@
      select/event-loop round is necessary.  */
   while (!len)  /* No data is buffered.  */
     {
+#if defined(__sgi)
+      struct xpg5_msghdr msg;
+#else
       struct msghdr msg;
+#endif
       struct iovec iovec;
 #ifdef USE_DESCRIPTOR_PASSING
       union {
@@ -106,9 +123,14 @@
       iovec.iov_base = buf;
       iovec.iov_len = buflen;
 #ifdef USE_DESCRIPTOR_PASSING
+#if defined(__sgi)
+      msg.msg_ctrl = control_u.control;
+      msg.msg_ctrllen = sizeof (control_u.control);
+#else
       msg.msg_control = control_u.control;
       msg.msg_controllen = sizeof (control_u.control);
 #endif
+#endif
 
       len = _assuan_recvmsg (ctx, ctx->inbound.fd, &msg, 0);
       if (len < 0)
@@ -159,7 +181,11 @@
 uds_writer (assuan_context_t ctx, const void *buf, size_t buflen)
 {
 #ifndef HAVE_W32_SYSTEM
+#if defined(__sgi)
+  struct xpg5_msghdr msg;
+#else
   struct msghdr msg;
+#endif
   struct iovec iovec;
   ssize_t len;
 
@@ -190,7 +216,11 @@
 uds_sendfd (assuan_context_t ctx, assuan_fd_t fd)
 {
 #ifdef USE_DESCRIPTOR_PASSING
+#if defined(__sgi)
+  struct xpg5_msghdr msg;
+#else
   struct msghdr msg;
+#endif
   struct iovec iovec;
   union {
     struct cmsghdr cm;
@@ -216,8 +246,13 @@
   iovec.iov_base = buffer;
   iovec.iov_len = strlen (buffer);
 
+#if defined(__sgi)
+  msg.msg_ctrl = control_u.control;
+  msg.msg_ctrllen = sizeof (control_u.control);
+#else
   msg.msg_control = control_u.control;
   msg.msg_controllen = sizeof (control_u.control);
+#endif
   cmptr = CMSG_FIRSTHDR (&msg);
   cmptr->cmsg_len = CMSG_LEN(sizeof(int));
   cmptr->cmsg_level = SOL_SOCKET;
diff -u -r libassuan-2.5.3-orig/src/posix-types.inc.h libassuan-2.5.3/src/posix-types.inc.h
--- libassuan-2.5.3-orig/src/posix-types.inc.h	2017-11-15 15:55:23.000000000 +0000
+++ libassuan-2.5.3/src/posix-types.inc.h	2020-08-18 09:09:59.806329800 +0000
@@ -20,5 +20,9 @@
 ##
 ## This file is included by the mkheader tool.  Lines starting with
 ## a double hash mark are not copied to the destination file.
+#if defined(__sgi)
+typedef struct xpg5_msghdr *assuan_msghdr_t;
+#else
 typedef struct msghdr *assuan_msghdr_t;
+#endif
 ##EOF##
diff -u -r libassuan-2.5.3-orig/src/system-posix.c libassuan-2.5.3/src/system-posix.c
--- libassuan-2.5.3-orig/src/system-posix.c	2017-11-15 16:02:52.000000000 +0000
+++ libassuan-2.5.3/src/system-posix.c	2020-08-18 09:09:59.808061640 +0000
@@ -130,7 +130,11 @@
   int ret;
 
   do
+#if defined(__sgi)
+    ret = _xpg5_recvmsg (fd, msg, flags);
+#else
     ret = recvmsg (fd, msg, flags);
+#endif
   while (ret == -1 && errno == EINTR);
 
   return ret;
@@ -145,7 +149,11 @@
   int ret;
 
   do
+#if defined(__sgi)
+    ret = _xpg5_sendmsg (fd, msg, flags);
+#else
     ret = sendmsg (fd, msg, flags);
+#endif
   while (ret == -1 && errno == EINTR);
 
   return ret;
