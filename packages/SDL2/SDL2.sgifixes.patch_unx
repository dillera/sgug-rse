diff -Naur SDL2-2.0.12.orig/configure SDL2-2.0.12/configure
--- SDL2-2.0.12.orig/configure	2020-03-10 20:36:18.000000000 +0000
+++ SDL2-2.0.12/configure	2021-04-09 08:28:56.830939600 +0000
@@ -18268,6 +18268,39 @@
     fi
 }
 
+CheckDMEDIA()
+{
+    if test x$enable_audio = xyes; then
+        { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dmedia audio support" >&5
+$as_echo_n "checking for dmedia audio support... " >&6; }
+        have_dmedia=no
+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+          #include <dmedia/audio.h>
+
+int
+main ()
+{
+
+          ALport audio_port;
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+
+        have_dmedia=yes
+
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: $have_dmedia" >&5
+$as_echo "$have_dmedia" >&6; }
+    fi
+}
+
+
 CheckJACK()
 {
     # Check whether --enable-jack was given.
@@ -23157,6 +23190,10 @@
             pthread_cflags="-D_REENTRANT -D_THREAD_SAFE"
             pthread_lib="-pthread"
             ;;
+        *-*-irix*)
+            pthread_cflags="-D_SGI_MP_SOURCE"
+            pthread_lib="-pthread -lpthread"
+            ;;
         *-*-netbsd*)
             pthread_cflags="-D_REENTRANT -D_THREAD_SAFE"
             pthread_lib="-lpthread"
@@ -24539,7 +24576,7 @@
 CheckEventSignals
 
 case "$host" in
-    *-*-linux*|*-*-uclinux*|*-*-gnu*|*-*-k*bsd*-gnu|*-*-bsdi*|*-*-freebsd*|*-*-dragonfly*|*-*-netbsd*|*-*-openbsd*|*-*-sysv5*|*-*-solaris*|*-*-hpux*|*-*-aix*|*-*-minix*|*-*-nto*)
+    *-*-linux*|*-*-uclinux*|*-*-gnu*|*-*-k*bsd*-gnu|*-*-bsdi*|*-*-freebsd*|*-*-dragonfly*|*-*-netbsd*|*-*-openbsd*|*-*-sysv5*|*-*-solaris*|*-*-hpux*|*-*-aix*|*-*-minix*|*-*-nto*|*-*-irix*)
         case "$host" in
             *-*-android*)
                 # Android
@@ -24573,6 +24610,7 @@
             *-*-solaris*)       ARCH=solaris ;;
             *-*-hpux*)          ARCH=hpux ;;
             *-*-aix*)           ARCH=aix ;;
+	    *-*-irix*)		ARCH=irix ;;
             *-*-minix*)         ARCH=minix ;;
             *-*-nto*)           ARCH=nto
                 CheckQNXVideo
@@ -24587,6 +24625,7 @@
         CheckARM
         CheckNEON
         CheckOSS
+	CheckDMEDIA
         CheckALSA
         CheckPulseAudio
         CheckJACK
@@ -24636,6 +24675,15 @@
                 SUMMARY_audio="${SUMMARY_audio} sun"
                 have_audio=yes
             ;;
+	    irix)
+
+$as_echo "#define SDL_AUDIO_DRIVER_DMEDIA 1" >>confdefs.h
+
+                SOURCES="$SOURCES $srcdir/src/audio/dmedia/*.c"
+                SUMMARY_audio="${SUMMARY_audio} dmedia"
+		EXTRA_LDFLAGS="$EXTRA_LDFLAGS -laudio"
+                have_audio=yes
+		;;
             netbsd)  # Don't use this on OpenBSD, it's busted.
 
 $as_echo "#define SDL_AUDIO_DRIVER_NETBSD 1" >>confdefs.h
diff -Naur SDL2-2.0.12.orig/configure.ac SDL2-2.0.12/configure.ac
--- SDL2-2.0.12.orig/configure.ac	2020-03-10 20:36:18.000000000 +0000
+++ SDL2-2.0.12/configure.ac	2021-04-09 08:32:54.591235600 +0000
@@ -926,6 +926,23 @@
     fi
 }
 
+dnl Check whether we want to use IRIX 6.5+ native audio or not
+CheckDMEDIA()
+{
+    if test x$enable_audio = xyes; then
+        AC_MSG_CHECKING(for dmedia audio support)
+        have_dmedia=no
+        AC_TRY_COMPILE([
+          #include <dmedia/audio.h>
+        ],[
+          ALport audio_port;
+        ],[
+        have_dmedia=yes
+        ])
+        AC_MSG_RESULT($have_dmedia)
+    fi
+}
+
 dnl Find JACK Audio
 CheckJACK()
 {
@@ -2808,6 +2825,10 @@
             pthread_cflags="-D_REENTRANT -D_THREAD_SAFE"
             pthread_lib="-pthread"
             ;;
+        *-*-irix*)
+	    pthread_cflags="-D_SGI_MP_SOURCE"
+	    pthread_lib="-pthread -lpthread"
+	    ;;
         *-*-netbsd*)
             pthread_cflags="-D_REENTRANT -D_THREAD_SAFE"
             pthread_lib="-lpthread"
@@ -3421,7 +3442,7 @@
 
 dnl Set up the configuration based on the host platform!
 case "$host" in
-    *-*-linux*|*-*-uclinux*|*-*-gnu*|*-*-k*bsd*-gnu|*-*-bsdi*|*-*-freebsd*|*-*-dragonfly*|*-*-netbsd*|*-*-openbsd*|*-*-sysv5*|*-*-solaris*|*-*-hpux*|*-*-aix*|*-*-minix*|*-*-nto*)
+    *-*-linux*|*-*-uclinux*|*-*-gnu*|*-*-k*bsd*-gnu|*-*-bsdi*|*-*-freebsd*|*-*-dragonfly*|*-*-netbsd*|*-*-openbsd*|*-*-sysv5*|*-*-solaris*|*-*-hpux*|*-*-aix*|*-*-minix*|*-*-nto*|*-*-irix*)
         case "$host" in
             *-*-android*)
                 # Android
@@ -3455,6 +3476,7 @@
             *-*-solaris*)       ARCH=solaris ;;
             *-*-hpux*)          ARCH=hpux ;;
             *-*-aix*)           ARCH=aix ;;
+            *-*-irix*)           ARCH=irix ;;
             *-*-minix*)         ARCH=minix ;;
             *-*-nto*)           ARCH=nto
                 CheckQNXVideo
@@ -3469,6 +3491,7 @@
         CheckARM
         CheckNEON
         CheckOSS
+	CheckDMEDIA
         CheckALSA
         CheckPulseAudio
         CheckJACK
@@ -3516,6 +3539,13 @@
                 SUMMARY_audio="${SUMMARY_audio} sun"
                 have_audio=yes
             ;;
+	    irix)
+                AC_DEFINE(SDL_AUDIO_DRIVER_DMEDIA, 1, [ ])
+                SOURCES="$SOURCES $srcdir/src/audio/dmedia/*.c"
+                SUMMARY_audio="${SUMMARY_audio} dmedia"
+		EXTRA_LDFLAGS="$EXTRA_LDFLAGS -laudio"
+                have_audio=yes
+		;;
             netbsd)  # Don't use this on OpenBSD, it's busted.
                 AC_DEFINE(SDL_AUDIO_DRIVER_NETBSD, 1, [ ])
                 SOURCES="$SOURCES $srcdir/src/audio/netbsd/*.c"
diff -Naur SDL2-2.0.12.orig/include/SDL_config.h.in SDL2-2.0.12/include/SDL_config.h.in
--- SDL2-2.0.12.orig/include/SDL_config.h.in	2020-03-10 20:36:18.000000000 +0000
+++ SDL2-2.0.12/include/SDL_config.h.in	2021-04-09 08:33:36.894098000 +0000
@@ -250,6 +250,7 @@
 #undef SDL_AUDIO_DRIVER_DISK
 #undef SDL_AUDIO_DRIVER_DSOUND
 #undef SDL_AUDIO_DRIVER_DUMMY
+#undef SDL_AUDIO_DRIVER_DMEDIA
 #undef SDL_AUDIO_DRIVER_EMSCRIPTEN
 #undef SDL_AUDIO_DRIVER_ESD
 #undef SDL_AUDIO_DRIVER_ESD_DYNAMIC
diff -Naur SDL2-2.0.12.orig/include/SDL_endian.h SDL2-2.0.12/include/SDL_endian.h
--- SDL2-2.0.12.orig/include/SDL_endian.h	2020-03-10 20:36:18.000000000 +0000
+++ SDL2-2.0.12/include/SDL_endian.h	2021-04-09 08:34:14.129806800 +0000
@@ -50,7 +50,7 @@
     defined(__m68k__) || defined(mc68000) || defined(_M_M68K) || \
     (defined(__MIPS__) && defined(__MIPSEB__)) || \
     defined(__ppc__) || defined(__POWERPC__) || defined(_M_PPC) || \
-    defined(__sparc__)
+    defined(__sparc__) || defined(__sgi)
 #define SDL_BYTEORDER   SDL_BIG_ENDIAN
 #else
 #define SDL_BYTEORDER   SDL_LIL_ENDIAN
diff -Naur SDL2-2.0.12.orig/src/audio/SDL_audio.c SDL2-2.0.12/src/audio/SDL_audio.c
--- SDL2-2.0.12.orig/src/audio/SDL_audio.c	2020-03-10 20:36:18.000000000 +0000
+++ SDL2-2.0.12/src/audio/SDL_audio.c	2021-04-09 08:35:07.209388400 +0000
@@ -110,6 +110,9 @@
 #if SDL_AUDIO_DRIVER_DUMMY
     &DUMMYAUDIO_bootstrap,
 #endif
+#if SDL_AUDIO_DRIVER_DMEDIA
+	&DMEDIA_bootstrap,
+#endif
     NULL
 };
 
diff -Naur SDL2-2.0.12.orig/src/audio/SDL_sysaudio.h SDL2-2.0.12/src/audio/SDL_sysaudio.h
--- SDL2-2.0.12.orig/src/audio/SDL_sysaudio.h	2020-03-10 20:36:18.000000000 +0000
+++ SDL2-2.0.12/src/audio/SDL_sysaudio.h	2021-04-09 08:35:28.969671600 +0000
@@ -194,6 +194,7 @@
 extern AudioBootStrap ESD_bootstrap;
 extern AudioBootStrap NACLAUDIO_bootstrap;
 extern AudioBootStrap NAS_bootstrap;
+extern AudioBootStrap DMEDIA_bootstrap;
 extern AudioBootStrap WASAPI_bootstrap;
 extern AudioBootStrap DSOUND_bootstrap;
 extern AudioBootStrap WINMM_bootstrap;
diff -Naur SDL2-2.0.12.orig/src/audio/dmedia/SDL_irixaudio.c SDL2-2.0.12/src/audio/dmedia/SDL_irixaudio.c
--- SDL2-2.0.12.orig/src/audio/dmedia/SDL_irixaudio.c	1969-12-31 19:00:00.000000000 +0000
+++ SDL2-2.0.12/src/audio/dmedia/SDL_irixaudio.c	2021-04-09 08:36:26.773500400 +0000
@@ -0,0 +1,229 @@
+/*
+    SDL - Simple DirectMedia Layer
+    Copyright (C) 1997-2012 Sam Lantinga
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+    Sam Lantinga
+    slouken@libsdl.org
+*/
+
+#include "../../SDL_internal.h"
+
+#if SDL_AUDIO_DRIVER_DMEDIA
+
+#include "SDL_config.h"
+
+/* Allow access to a raw mixing buffer (For IRIX 6.5 and higher) */
+/* patch for IRIX 5 by Georg Schwarz 18/07/2004 */
+
+#include "SDL_timer.h"
+#include "SDL_audio.h"
+#include "../SDL_audiodev_c.h"
+#include "../SDL_audio_c.h"
+#include "SDL_irixaudio.h"
+
+
+#ifndef AL_RESOURCE /* as a test whether we use the old IRIX audio libraries */
+#define OLD_IRIX_AUDIO
+#define alClosePort(x) ALcloseport(x)
+#define alFreeConfig(x) ALfreeconfig(x)
+#define alGetFillable(x) ALgetfillable(x)
+#define alNewConfig() ALnewconfig()
+#define alOpenPort(x,y,z) ALopenport(x,y,z)
+#define alSetChannels(x,y) ALsetchannels(x,y)
+#define alSetQueueSize(x,y) ALsetqueuesize(x,y)
+#define alSetSampFmt(x,y) ALsetsampfmt(x,y)
+#define alSetWidth(x,y) ALsetwidth(x,y)
+#endif
+
+/* Audio driver functions */
+static int AL_OpenAudio(_THIS, void *handle, const char *devname, int iscapture);
+static void AL_WaitAudio(_THIS);
+static void AL_PlayAudio(_THIS);
+static Uint8 *AL_GetAudioBuf(_THIS);
+static void AL_CloseAudio(_THIS);
+
+void static AL_WaitAudio(_THIS)
+{
+	Sint32 timeleft;
+
+	timeleft = this->spec.samples - alGetFillable(audio_port);
+	if ( timeleft > 0 ) {
+		timeleft /= (this->spec.freq/1000);
+		SDL_Delay((Uint32)timeleft);
+	}
+}
+
+static void AL_PlayAudio(_THIS)
+{
+	/* Write the audio data out */
+	if ( alWriteFrames(audio_port, mixbuf, this->spec.samples) < 0 ) {
+		/* Assume fatal error, for now */
+		SDL_OpenedAudioDeviceDisconnected(this);
+	}
+}
+
+static Uint8 *AL_GetAudioBuf(_THIS)
+{
+	return(mixbuf);
+}
+
+static void AL_CloseAudio(_THIS)
+{
+	if ( mixbuf != NULL ) {
+		SDL_free(mixbuf);
+		mixbuf = NULL;
+	}
+	if ( audio_port != NULL ) {
+		alClosePort(audio_port);
+		audio_port = NULL;
+	}
+}
+
+static int AL_OpenAudio(_THIS, void *handle, const char *devname, int iscapture)
+{
+	SDL_AudioFormat test_format = SDL_FirstAudioFormat(this->spec.format);
+	long width = 0;
+	long fmt = 0;
+	int valid = 0;
+
+	/* from SDL_sunaudio.c */
+
+	/* We don't care what the devname is...we'll try to open anything. */
+	/*  ...but default to first name in the list... */
+	if (devname == NULL) {
+		devname = SDL_GetAudioDeviceName(0, iscapture);
+		if (devname == NULL) {
+			return SDL_SetError("No such audio device");
+		}
+	}
+
+	/* Initialize all variables that we clean on shutdown */
+	this->hidden = (struct SDL_PrivateAudioData *)
+		SDL_malloc((sizeof *this->hidden));
+	if (this->hidden == NULL) {
+		return SDL_OutOfMemory();
+	}
+	SDL_zerop(this->hidden);
+
+#ifdef OLD_IRIX_AUDIO
+	{
+		long audio_param[2];
+		audio_param[0] = AL_OUTPUT_RATE;
+		audio_param[1] = this->spec.freq;
+		valid = (ALsetparams(AL_DEFAULT_DEVICE, audio_param, 2) < 0);
+	}
+#else
+	{
+		ALpv audio_param;
+		audio_param.param = AL_RATE;
+		audio_param.value.i = this->spec.freq;
+		valid = (alSetParams(AL_DEFAULT_OUTPUT, &audio_param, 1) < 0);
+	}
+#endif
+
+	while ((!valid) && (test_format)) {
+		valid = 1;
+		this->spec.format = test_format;
+
+		switch (test_format) {
+			case AUDIO_S8:
+				width = AL_SAMPLE_8;
+				fmt = AL_SAMPFMT_TWOSCOMP;
+				break;
+
+			case AUDIO_S16SYS:
+				width = AL_SAMPLE_16;
+				fmt = AL_SAMPFMT_TWOSCOMP;
+				break;
+
+			default:
+				valid = 0;
+				test_format = SDL_NextAudioFormat();
+				break;
+		}
+
+		if (valid) {
+			ALconfig audio_config = alNewConfig();
+			valid = 0;
+			if (audio_config) {
+				if (alSetChannels(audio_config, this->spec.channels) < 0) {
+					if (this->spec.channels > 2) {  /* can't handle > stereo? */
+						this->spec.channels = 2;  /* try again below. */
+					}
+				}
+
+				if ((alSetSampFmt(audio_config, fmt) >= 0) &&
+				    ((!width) || (alSetWidth(audio_config, width) >= 0)) &&
+				    (alSetQueueSize(audio_config, this->spec.samples * 2) >= 0) &&
+				    (alSetChannels(audio_config, this->spec.channels) >= 0)) {
+
+					audio_port = alOpenPort("SDL audio", "w", audio_config);
+					if (audio_port == NULL) {
+						/* docs say AL_BAD_CHANNELS happens here, too. */
+						int err = oserror();
+						if (err == AL_BAD_CHANNELS) {
+							this->spec.channels = 2;
+							alSetChannels(audio_config, this->spec.channels);
+							audio_port = alOpenPort("SDL audio", "w", audio_config);
+						}
+					}
+
+					if (audio_port != NULL) {
+						valid = 1;
+					}
+				}
+
+				alFreeConfig(audio_config);
+			}
+		}
+	}
+
+	if (!valid) {
+		SDL_SetError("Unsupported audio format");
+		return (-1);
+	}
+
+	/* Update the fragment size as size in bytes */
+	SDL_CalculateAudioSpec(&this->spec);
+
+	/* Allocate mixing buffer */
+	mixbuf = (Uint8 *) SDL_malloc(this->spec.size);
+	if (mixbuf == NULL) {
+		SDL_OutOfMemory();
+		return (-1);
+	}
+	SDL_memset(mixbuf, this->spec.silence, this->spec.size);
+
+	/* We're ready to rock and roll. :-) */
+	return (0);
+}
+
+static int
+DMEDIA_init(SDL_AudioDriverImpl * impl)
+{
+	/* Set the function pointers */
+	impl->OpenDevice = AL_OpenAudio;
+	impl->WaitDevice = AL_WaitAudio;
+	impl->PlayDevice = AL_PlayAudio;
+	impl->GetDeviceBuf = AL_GetAudioBuf;
+	impl->CloseDevice = AL_CloseAudio;
+
+	return 1;
+}
+
+AudioBootStrap DMEDIA_bootstrap = {
+		"AL", "IRIX DMedia audio", DMEDIA_init, 0
+};
+
+#endif
+
diff -Naur SDL2-2.0.12.orig/src/audio/dmedia/SDL_irixaudio.h SDL2-2.0.12/src/audio/dmedia/SDL_irixaudio.h
--- SDL2-2.0.12.orig/src/audio/dmedia/SDL_irixaudio.h	1969-12-31 19:00:00.000000000 +0000
+++ SDL2-2.0.12/src/audio/dmedia/SDL_irixaudio.h	2021-04-09 08:36:43.159926800 +0000
@@ -0,0 +1,42 @@
+/*
+    SDL - Simple DirectMedia Layer
+    Copyright (C) 1997-2012 Sam Lantinga
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+    Sam Lantinga
+    slouken@libsdl.org
+*/
+#include "SDL_config.h"
+
+#ifndef _SDL_lowaudio_h
+#define _SDL_lowaudio_h
+
+#include <dmedia/audio.h>
+#include <errno.h> /* for oserror */
+
+#include "../SDL_sysaudio.h"
+
+/* Hidden "this" pointer for the audio functions */
+#define _THIS	SDL_AudioDevice *this
+
+struct SDL_PrivateAudioData {
+	/* The handle for the audio device */
+	ALport audio_port;
+
+	Uint8 *mixbuf;           /* The app mixing buffer */
+};
+
+/* Old variable names */
+#define audio_port		(this->hidden->audio_port)
+#define mixbuf			(this->hidden->mixbuf)
+
+#endif /* _SDL_lowaudio_h */
diff -Naur SDL2-2.0.12.orig/src/cpuinfo/SDL_cpuinfo.c SDL2-2.0.12/src/cpuinfo/SDL_cpuinfo.c
--- SDL2-2.0.12.orig/src/cpuinfo/SDL_cpuinfo.c	2020-03-10 20:36:18.000000000 +0000
+++ SDL2-2.0.12/src/cpuinfo/SDL_cpuinfo.c	2021-04-09 08:37:32.360527600 +0000
@@ -554,6 +554,11 @@
             SDL_CPUCount = (int)sysconf(_SC_NPROCESSORS_ONLN);
         }
 #endif
+#ifdef __sgi
+		if (SDL_CPUCount <= 0) {
+			SDL_CPUCount = (int) sysconf(_SC_NPROC_ONLN);
+		}
+#endif
 #ifdef HAVE_SYSCTLBYNAME
         if (SDL_CPUCount <= 0) {
             size_t size = sizeof(SDL_CPUCount);
diff -Naur SDL2-2.0.12.orig/src/render/opengl/SDL_glfuncs.h SDL2-2.0.12/src/render/opengl/SDL_glfuncs.h
--- SDL2-2.0.12.orig/src/render/opengl/SDL_glfuncs.h	2020-03-10 20:36:18.000000000 +0000
+++ SDL2-2.0.12/src/render/opengl/SDL_glfuncs.h	2021-04-09 08:41:31.449039600 +0000
@@ -37,7 +37,11 @@
                  const GLubyte *))
 SDL_PROC(void, glBlendEquation, (GLenum))
 SDL_PROC_UNUSED(void, glBlendFunc, (GLenum, GLenum))
+#ifdef __sgi
+SDL_PROC_UNUSED(void, glBlendFuncSeparate, (GLenum, GLenum, GLenum, GLenum))
+#else
 SDL_PROC(void, glBlendFuncSeparate, (GLenum, GLenum, GLenum, GLenum))
+#endif
 SDL_PROC_UNUSED(void, glCallList, (GLuint))
 SDL_PROC_UNUSED(void, glCallLists, (GLsizei, GLenum, const GLvoid *))
 SDL_PROC(void, glClear, (GLbitfield))
diff -Naur SDL2-2.0.12.orig/src/render/opengl/SDL_render_gl.c SDL2-2.0.12/src/render/opengl/SDL_render_gl.c
--- SDL2-2.0.12.orig/src/render/opengl/SDL_render_gl.c	2020-03-10 20:36:18.000000000 +0000
+++ SDL2-2.0.12/src/render/opengl/SDL_render_gl.c	2021-04-09 08:44:05.526738800 +0000
@@ -1034,10 +1034,12 @@
             data->glDisable(GL_BLEND);
         } else {
             data->glEnable(GL_BLEND);
+#ifndef __sgi
             data->glBlendFuncSeparate(GetBlendFunc(SDL_GetBlendModeSrcColorFactor(blend)),
                                       GetBlendFunc(SDL_GetBlendModeDstColorFactor(blend)),
                                       GetBlendFunc(SDL_GetBlendModeSrcAlphaFactor(blend)),
                                       GetBlendFunc(SDL_GetBlendModeDstAlphaFactor(blend)));
+#endif
             data->glBlendEquation(GetBlendEquation(SDL_GetBlendModeColorOperation(blend)));
         }
         data->drawstate.blend = blend;
diff -Naur SDL2-2.0.12.orig/src/stdlib/SDL_getenv.c SDL2-2.0.12/src/stdlib/SDL_getenv.c
--- SDL2-2.0.12.orig/src/stdlib/SDL_getenv.c	2020-03-10 20:36:18.000000000 +0000
+++ SDL2-2.0.12/src/stdlib/SDL_getenv.c	2021-04-09 08:44:53.605706000 +0000
@@ -88,7 +88,9 @@
     
     if (getenv(name) != NULL) {
         if (overwrite) {
+#ifndef __sgi
             unsetenv(name);
+#endif
         } else {
             return 0;  /* leave the existing one there. */
         }
diff -Naur SDL2-2.0.12.orig/src/timer/unix/SDL_systimer.c SDL2-2.0.12/src/timer/unix/SDL_systimer.c
--- SDL2-2.0.12.orig/src/timer/unix/SDL_systimer.c	2020-03-10 20:36:18.000000000 +0000
+++ SDL2-2.0.12/src/timer/unix/SDL_systimer.c	2021-04-09 08:45:52.001905200 +0000
@@ -51,8 +51,10 @@
 
 /* Use CLOCK_MONOTONIC_RAW, if available, which is not subject to adjustment by NTP */
 #if HAVE_CLOCK_GETTIME
-#ifdef CLOCK_MONOTONIC_RAW
+#if defined(CLOCK_MONOTONIC_RAW)
 #define SDL_MONOTONIC_CLOCK CLOCK_MONOTONIC_RAW
+#elif defined(CLOCK_SGI_CYCLE)
+#define SDL_MONOTONIC_CLOCK CLOCK_SGI_CYCLE
 #else
 #define SDL_MONOTONIC_CLOCK CLOCK_MONOTONIC
 #endif
diff -Naur SDL2-2.0.12.orig/src/video/x11/SDL_x11messagebox.c SDL2-2.0.12/src/video/x11/SDL_x11messagebox.c
--- SDL2-2.0.12.orig/src/video/x11/SDL_x11messagebox.c	2020-03-10 20:36:18.000000000 +0000
+++ SDL2-2.0.12/src/video/x11/SDL_x11messagebox.c	2021-04-09 08:55:06.194294000 +0000
@@ -32,6 +32,10 @@
 #include <X11/keysym.h>
 #include <locale.h>
 
+#ifdef __sgi
+#define SDL_X11_HAVE_UTF8 0
+#endif
+
 
 #define SDL_FORK_MESSAGEBOX 1
 #define SDL_SET_LOCALE      1
@@ -127,12 +131,14 @@
 static void
 GetTextWidthHeight( SDL_MessageBoxDataX11 *data, const char *str, int nbytes, int *pwidth, int *pheight )
 {
+#ifdef X_HAVE_UTF8_STRING
     if (SDL_X11_HAVE_UTF8) {
         XRectangle overall_ink, overall_logical;
         X11_Xutf8TextExtents(data->font_set, str, nbytes, &overall_ink, &overall_logical);
         *pwidth = overall_logical.width;
         *pheight = overall_logical.height;
     } else {
+#endif
         XCharStruct text_structure;
         int font_direction, font_ascent, font_descent;
         X11_XTextExtents( data->font_struct, str, nbytes,
@@ -140,7 +146,9 @@
                       &text_structure );
         *pwidth = text_structure.width;
         *pheight = text_structure.ascent + text_structure.descent;
+#ifdef X_HAVE_UTF8_STRING
     }
+#endif
 }
 
 /* Return index of button if position x,y is contained therein. */
@@ -190,6 +198,7 @@
         return SDL_SetError("Couldn't open X11 display");
     }
 
+#ifdef X_HAVE_UTF8_STRING
     if (SDL_X11_HAVE_UTF8) {
         char **missing = NULL;
         int num_missing = 0;
@@ -202,6 +211,7 @@
             return SDL_SetError("Couldn't load font %s", g_MessageBoxFont);
         }
     } else {
+#endif
         data->font_struct = X11_XLoadQueryFont( data->display, g_MessageBoxFontLatin1 );
         if ( data->font_struct == NULL ) {
             return SDL_SetError("Couldn't load font %s", g_MessageBoxFontLatin1);
@@ -570,15 +580,19 @@
     for ( i = 0; i < data->numlines; i++ ) {
         TextLineData *plinedata = &data->linedata[ i ];
 
+#ifdef X_HAVE_UTF8_STRING
         if (SDL_X11_HAVE_UTF8) {
             X11_Xutf8DrawString( display, window, data->font_set, ctx,
                              data->xtext, data->ytext + i * data->text_height,
                              plinedata->text, plinedata->length );
         } else {
+#endif
             X11_XDrawString( display, window, ctx,
                          data->xtext, data->ytext + i * data->text_height,
                          plinedata->text, plinedata->length );
+#ifdef X_HAVE_UTF8_STRING
         }
+#endif
     }
 
     for ( i = 0; i < data->numbuttons; i++ ) {
@@ -601,16 +615,20 @@
                         data->color[ SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED ] :
                         data->color[ SDL_MESSAGEBOX_COLOR_TEXT ] );
 
+#ifdef X_HAVE_UTF8_STRING
         if (SDL_X11_HAVE_UTF8) {
             X11_Xutf8DrawString( display, window, data->font_set, ctx,
                              buttondatax11->x + offset,
                              buttondatax11->y + offset,
                              buttondata->text, buttondatax11->length );
         } else {
+#endif
             X11_XDrawString( display, window, ctx,
                          buttondatax11->x + offset, buttondatax11->y + offset,
                          buttondata->text, buttondatax11->length );
+#ifdef X_HAVE_UTF8_STRING
         }
+#endif
     }
 
 #if SDL_VIDEO_DRIVER_X11_XDBE
diff -Naur SDL2-2.0.12.orig/test/configure SDL2-2.0.12/test/configure
--- SDL2-2.0.12.orig/test/configure	2020-03-10 20:36:18.000000000 +0000
+++ SDL2-2.0.12/test/configure	2021-04-09 08:59:21.671510000 +0000
@@ -3626,44 +3626,8 @@
   $as_echo_n "(cached) " >&6
 else
   # One or both of the vars are not set, and there is no cached value.
-ac_x_includes=no ac_x_libraries=no
-rm -f -r conftest.dir
-if mkdir conftest.dir; then
-  cd conftest.dir
-  cat >Imakefile <<'_ACEOF'
-incroot:
-	@echo incroot='${INCROOT}'
-usrlibdir:
-	@echo usrlibdir='${USRLIBDIR}'
-libdir:
-	@echo libdir='${LIBDIR}'
-_ACEOF
-  if (export CC; ${XMKMF-xmkmf}) >/dev/null 2>/dev/null && test -f Makefile; then
-    # GNU make sometimes prints "make[1]: Entering ...", which would confuse us.
-    for ac_var in incroot usrlibdir libdir; do
-      eval "ac_im_$ac_var=\`\${MAKE-make} $ac_var 2>/dev/null | sed -n 's/^$ac_var=//p'\`"
-    done
-    # Open Windows xmkmf reportedly sets LIBDIR instead of USRLIBDIR.
-    for ac_extension in a so sl dylib la dll; do
-      if test ! -f "$ac_im_usrlibdir/libX11.$ac_extension" &&
-	 test -f "$ac_im_libdir/libX11.$ac_extension"; then
-	ac_im_usrlibdir=$ac_im_libdir; break
-      fi
-    done
-    # Screen out bogus values from the imake configuration.  They are
-    # bogus both because they are the default anyway, and because
-    # using them would break gcc on systems where it needs fixed includes.
-    case $ac_im_incroot in
-	/usr/include) ac_x_includes= ;;
-	*) test -f "$ac_im_incroot/X11/Xos.h" && ac_x_includes=$ac_im_incroot;;
-    esac
-    case $ac_im_usrlibdir in
-	/usr/lib | /usr/lib64 | /lib | /lib64) ;;
-	*) test -d "$ac_im_usrlibdir" && ac_x_libraries=$ac_im_usrlibdir ;;
-    esac
-  fi
-  cd ..
-  rm -f -r conftest.dir
+ ac_x_includes=no ac_x_libraries=no 
+ rm -f -r conftest.dir
 fi
 
 # Standard set of common directories for X headers.
